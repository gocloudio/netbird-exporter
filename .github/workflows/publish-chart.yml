name: Publish Helm Chart

on:
  push:
    branches:
      - main
    paths:
      - 'charts/**'
    tags:
      - 'chart-v*'

jobs:
  publish-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Set chart version from tag
        if: startsWith(github.ref, 'refs/tags/chart-v')
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/chart-v}
          sed -i "s/^version:.*/version: ${TAG_NAME}/" charts/netbird-exporter/Chart.yaml
          echo "Publishing chart version: ${TAG_NAME}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and Push Helm Chart
        run: |
          # Get chart version
          CHART_VERSION=$(grep 'version:' charts/netbird-exporter/Chart.yaml | awk '{print $2}')
          echo "Chart version: $CHART_VERSION"
          
          # Package chart
          helm package charts/netbird-exporter
          
          # Push to GHCR
          helm push netbird-exporter-${CHART_VERSION}.tgz oci://ghcr.io/${{ github.repository }}/charts

      - name: Set up chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          install_only: true

      - name: Create GitHub Release
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          CHART_VERSION=$(grep 'version:' charts/netbird-exporter/Chart.yaml | awk '{print $2}')
          cr upload --package-path netbird-exporter-${CHART_VERSION}.tgz --owner $(echo ${{ github.repository }} | cut -d '/' -f 1) --git-repo $(echo ${{ github.repository }} | cut -d '/' -f 2) --token $CR_TOKEN
          cr index --owner $(echo ${{ github.repository }} | cut -d '/' -f 1) --git-repo $(echo ${{ github.repository }} | cut -d '/' -f 2) --token $CR_TOKEN --push 